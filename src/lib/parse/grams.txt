modulefield : . modulefield type [1]
modulefield : . modulefield import [2]
modulefield : . modulefield table [3]
modulefield : . modulefield memory [4]
modulefield : . modulefield global [5]
modulefield : . modulefield export [6]
modulefield : . modulefield func [7]
module : . ParenL Module Id modulefield ParenR [9]
module : . ParenL Module modulefield ParenR [10]
module : . modulefield [11]
module : . ParenL ParenR [12]
module : . EOF [13]
valtype : . NumType [14]
valtype : . Funcref [15]
valtype : . Externref [16]
reftype : . Funcref [17]
reftype : . Externref [18]
valtypes : . valtypes valtype [19]
params : . params ParenL Param Id valtype ParenR [21]
params : . params ParenL Param valtypes ParenR [22]
results : . results ParenL Result valtypes ParenR [24]
functype : . ParenL Func params results ParenR [26]
heaptype : . Func [27]
heaptype : . Extern [28]
id : . Id [29]
type : . ParenL Type id functype ParenR [31]
u32 : . Integer [32]
u64 : . Integer [33]
i32 : . Integer [34]
i64 : . Integer [35]
f32 : . Float [36]
f64 : . Float [37]
typeidx : . u32 [38]
typeidx : . Id [39]
funcidx : . u32 [40]
funcidx : . Id [41]
tableidx : . u32 [42]
tableidx : . Id [43]
memidx : . u32 [44]
memidx : . Id [45]
globalidx : . u32 [46]
globalidx : . Id [47]
typeuse : . ParenL Type typeidx ParenR params results [48]
typeuse : . params results [49]
limits : . u64 [51]
limits : . u64 u64 [52]
tabletype : . limits reftype [53]
globaltype : . valtype [54]
globaltype : . ParenL Mut valtype ParenR [55]
constexpr : . Ref_null heaptype [56]
constexpr : . Ref_func funcidx [57]
constexpr : . I32_const i32 [58]
constexpr : . I64_const i64 [59]
constexpr : . F32_const f32 [60]
constexpr : . F64_const f64 [61]
constexpr : . VariableInstr globalidx [62]
import : . ParenL Import String String importdesc ParenR [63]
importdesc : . ParenL Func id typeuse ParenR [64]
importdesc : . ParenL Table id tabletype ParenR [65]
importdesc : . ParenL Memory id limits ParenR [66]
importdesc : . ParenL Global id globaltype ParenR [67]
export : . ParenL Export String ParenL Func funcidx ParenR ParenR [68]
export : . ParenL Export String ParenL Table tableidx ParenR ParenR [69]
export : . ParenL Export String ParenL Memory memidx ParenR ParenR [70]
export : . ParenL Export String ParenL Global globalidx ParenR ParenR [71]
importabbr : . ParenL Import String String ParenR [72]
exportabbr : . exportabbr ParenL Export String ParenR [74]
locals : . ParenL Local Id valtype ParenR locals [76]
locals : . ParenL Local valtypes ParenR locals [77]
func : . ParenL Func id exportabbr typeuse locals instrs ParenR [80]
func : . ParenL Func id exportabbr ParenL Import String String ParenR typeuse ParenR [81]
table : . ParenL Table id exportabbr importabbr tabletype ParenR [82]
memory : . ParenL Memory id exportabbr importabbr limits ParenR [83]
global : . ParenL Global id exportabbr globaltype constexpr ParenR [84]
global : . ParenL Global id exportabbr ParenL Import String String ParenR globaltype ParenR [85]
modulefield : . type [1]
modulefield : . import [2]
modulefield : . table [3]
modulefield : . memory [4]
modulefield : . global [5]
modulefield : . export [6]
modulefield : . func [7]
module : . ParenL Module Id ParenR [9]
module : . ParenL Module ParenR [10]
valtypes : . valtype [19]
params : . ParenL Param Id valtype ParenR [21]
params : . ParenL Param valtypes ParenR [22]
params : . params ParenL Param ParenR [22]
results : . ParenL Result valtypes ParenR [24]
results : . results ParenL Result ParenR [24]
functype : . ParenL Func results ParenR [26]
functype : . ParenL Func params ParenR [26]
type : . ParenL Type functype ParenR [31]
typeuse : . ParenL Type typeidx ParenR results [48]
typeuse : . ParenL Type typeidx ParenR params [48]
typeuse : . results [49]
typeuse : . params [49]
importdesc : . ParenL Func typeuse ParenR [64]
importdesc : . ParenL Func id ParenR [64]
importdesc : . ParenL Table tabletype ParenR [65]
importdesc : . ParenL Memory limits ParenR [66]
importdesc : . ParenL Global globaltype ParenR [67]
exportabbr : . ParenL Export String ParenR [74]
locals : . ParenL Local Id valtype ParenR [76]
locals : . ParenL Local ParenR locals [77]
locals : . ParenL Local valtypes ParenR [77]
func : . ParenL Func exportabbr typeuse locals instrs ParenR [80]
func : . ParenL Func id typeuse locals instrs ParenR [80]
func : . ParenL Func id exportabbr locals instrs ParenR [80]
func : . ParenL Func id exportabbr typeuse instrs ParenR [80]
func : . ParenL Func id exportabbr typeuse locals ParenR [80]
func : . ParenL Func exportabbr ParenL Import String String ParenR typeuse ParenR [81]
func : . ParenL Func id ParenL Import String String ParenR typeuse ParenR [81]
func : . ParenL Func id exportabbr ParenL Import String String ParenR ParenR [81]
table : . ParenL Table exportabbr importabbr tabletype ParenR [82]
table : . ParenL Table id importabbr tabletype ParenR [82]
table : . ParenL Table id exportabbr tabletype ParenR [82]
memory : . ParenL Memory exportabbr importabbr limits ParenR [83]
memory : . ParenL Memory id importabbr limits ParenR [83]
memory : . ParenL Memory id exportabbr limits ParenR [83]
global : . ParenL Global exportabbr globaltype constexpr ParenR [84]
global : . ParenL Global id globaltype constexpr ParenR [84]
global : . ParenL Global exportabbr ParenL Import String String ParenR globaltype ParenR [85]
global : . ParenL Global id ParenL Import String String ParenR globaltype ParenR [85]
params : . ParenL Param ParenR [22]
results : . ParenL Result ParenR [24]
functype : . ParenL Func ParenR [26]
typeuse : . ParenL Type typeidx ParenR [48]
importdesc : . ParenL Func ParenR [64]
locals : . ParenL Local ParenR [77]
func : . ParenL Func typeuse locals instrs ParenR [80]
func : . ParenL Func exportabbr locals instrs ParenR [80]
func : . ParenL Func id locals instrs ParenR [80]
func : . ParenL Func exportabbr typeuse instrs ParenR [80]
func : . ParenL Func id typeuse instrs ParenR [80]
func : . ParenL Func id exportabbr instrs ParenR [80]
func : . ParenL Func exportabbr typeuse locals ParenR [80]
func : . ParenL Func id typeuse locals ParenR [80]
func : . ParenL Func id exportabbr locals ParenR [80]
func : . ParenL Func id exportabbr typeuse ParenR [80]
func : . ParenL Func ParenL Import String String ParenR typeuse ParenR [81]
func : . ParenL Func exportabbr ParenL Import String String ParenR ParenR [81]
func : . ParenL Func id ParenL Import String String ParenR ParenR [81]
table : . ParenL Table importabbr tabletype ParenR [82]
table : . ParenL Table exportabbr tabletype ParenR [82]
table : . ParenL Table id tabletype ParenR [82]
memory : . ParenL Memory importabbr limits ParenR [83]
memory : . ParenL Memory exportabbr limits ParenR [83]
memory : . ParenL Memory id limits ParenR [83]
global : . ParenL Global globaltype constexpr ParenR [84]
global : . ParenL Global ParenL Import String String ParenR globaltype ParenR [85]
func : . ParenL Func locals instrs ParenR [80]
func : . ParenL Func typeuse instrs ParenR [80]
func : . ParenL Func exportabbr instrs ParenR [80]
func : . ParenL Func id instrs ParenR [80]
func : . ParenL Func typeuse locals ParenR [80]
func : . ParenL Func exportabbr locals ParenR [80]
func : . ParenL Func id locals ParenR [80]
func : . ParenL Func exportabbr typeuse ParenR [80]
func : . ParenL Func id typeuse ParenR [80]
func : . ParenL Func id exportabbr ParenR [80]
func : . ParenL Func ParenL Import String String ParenR ParenR [81]
table : . ParenL Table tabletype ParenR [82]
memory : . ParenL Memory limits ParenR [83]
func : . ParenL Func instrs ParenR [80]
func : . ParenL Func locals ParenR [80]
func : . ParenL Func typeuse ParenR [80]
func : . ParenL Func exportabbr ParenR [80]
func : . ParenL Func id ParenR [80]
func : . ParenL Func ParenR [80]
