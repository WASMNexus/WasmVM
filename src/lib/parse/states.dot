digraph {
  node [shape="box"]
S0 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S0</td></tr>0<tr><td> : . module (EOF,) [0]</td></tr><tr><td>module : . EOF (EOF,) [5]</td></tr><tr><td>module : . ParenL Module ParenR (EOF,) [4]</td></tr><tr><td>module : . ParenL Module modulefield ParenR (EOF,) [4]</td></tr></table>>];
S0 -> S1 [label="EOF"];
S0 -> S2 [label="ParenL"];
S0 -> S3 [label="module"];
S1 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S1</td></tr>1<tr><td><font color="red">module : EOF . (EOF,) [5]</font></td></tr></table>>];
S2 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S2</td></tr>2<tr><td>module : ParenL . Module ParenR (EOF,) [4]</td></tr><tr><td>module : ParenL . Module modulefield ParenR (EOF,) [4]</td></tr></table>>];
S2 -> S4 [label="Module"];
S3 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S3</td></tr>3<tr><td><font color="red"> : module . (EOF,) [0]</font></td></tr></table>>];
S4 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S4</td></tr>4<tr><td>module : ParenL Module . ParenR (EOF,) [4]</td></tr><tr><td>module : ParenL Module . modulefield ParenR (EOF,) [4]</td></tr><tr><td>modulefield : . func (ParenL,ParenR,) [2]</td></tr><tr><td>modulefield : . type (ParenL,ParenR,) [1]</td></tr><tr><td>modulefield : . modulefield func (ParenL,ParenR,) [2]</td></tr><tr><td>modulefield : . modulefield type (ParenL,ParenR,) [1]</td></tr><tr><td>func : . ParenL Func ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse locals ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func ParenL Import String String ParenR ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse locals instrs ParenR (ParenR,) [43]</td></tr><tr><td>func : . ParenL Func ParenL Import String String ParenR typeuse ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func exportabbr ParenL Import String String ParenR ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id ParenL Import String String ParenR ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func exportabbr ParenL Import String String ParenR typeuse ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id ParenL Import String String ParenR typeuse ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id exportabbr ParenL Import String String ParenR ParenR (ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id exportabbr ParenL Import String String ParenR typeuse ParenR (ParenR,) [44]</td></tr><tr><td>type : . ParenL Type functype ParenR (ParenR,) [21]</td></tr><tr><td>type : . ParenL Type id functype ParenR (ParenR,) [21]</td></tr></table>>];
S4 -> S5 [label="ParenL"];
S4 -> S6 [label="ParenR"];
S4 -> S7 [label="func"];
S4 -> S8 [label="modulefield"];
S4 -> S9 [label="type"];
S5 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S5</td></tr>5<tr><td>func : ParenL . Func ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func id typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func id exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL . Func ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func id ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func id ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func id exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL . Func id exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>type : ParenL . Type functype ParenR (ParenL,ParenR,) [21]</td></tr><tr><td>type : ParenL . Type id functype ParenR (ParenL,ParenR,) [21]</td></tr></table>>];
S5 -> S10 [label="Type"];
S5 -> S11 [label="Func"];
S6 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S6</td></tr>6<tr><td><font color="red">module : ParenL Module ParenR . (EOF,) [4]</font></td></tr></table>>];
S7 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S7</td></tr>7<tr><td><font color="red">modulefield : func . (ParenL,ParenR,) [2]</font></td></tr></table>>];
S8 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S8</td></tr>8<tr><td>module : ParenL Module modulefield . ParenR (EOF,) [4]</td></tr><tr><td>modulefield : modulefield . func (ParenL,ParenR,) [2]</td></tr><tr><td>modulefield : modulefield . type (ParenL,ParenR,) [1]</td></tr><tr><td>func : . ParenL Func ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func id typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : . ParenL Func ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : . ParenL Func id exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>type : . ParenL Type functype ParenR (ParenL,ParenR,) [21]</td></tr><tr><td>type : . ParenL Type id functype ParenR (ParenL,ParenR,) [21]</td></tr></table>>];
S8 -> S5 [label="ParenL"];
S8 -> S12 [label="ParenR"];
S8 -> S13 [label="func"];
S8 -> S14 [label="type"];
S9 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S9</td></tr>9<tr><td><font color="red">modulefield : type . (ParenL,ParenR,) [1]</font></td></tr></table>>];
S10 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S10</td></tr>10<tr><td>type : ParenL Type . functype ParenR (ParenL,ParenR,) [21]</td></tr><tr><td>type : ParenL Type . id functype ParenR (ParenL,ParenR,) [21]</td></tr><tr><td>functype : . ParenL Func ParenR (ParenR,) [18]</td></tr><tr><td>functype : . ParenL Func params ParenR (ParenR,) [18]</td></tr><tr><td>functype : . ParenL Func results ParenR (ParenR,) [18]</td></tr><tr><td>functype : . ParenL Func params results ParenR (ParenR,) [18]</td></tr><tr><td>id : . Id (ParenL,) [19]</td></tr></table>>];
S10 -> S97 [label="ParenL"];
S10 -> S52 [label="Id"];
S10 -> S15 [label="functype"];
S10 -> S16 [label="id"];
S11 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S11</td></tr>11<tr><td>func : ParenL Func . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . id typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . id exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func . ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . id ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . id ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . id exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func . id exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>exportabbr : . ParenL Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>exportabbr : . exportabbr ParenL Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>id : . Id (ParenL,ParenR,) [19]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>typeuse : . params (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S11 -> S51 [label="ParenL"];
S11 -> S17 [label="ParenR"];
S11 -> S52 [label="Id"];
S11 -> S18 [label="exportabbr"];
S11 -> S19 [label="id"];
S11 -> S20 [label="instrs"];
S11 -> S21 [label="locals"];
S11 -> S184 [label="params"];
S11 -> S182 [label="results"];
S11 -> S22 [label="typeuse"];
S12 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S12</td></tr>12<tr><td><font color="red">module : ParenL Module modulefield ParenR . (EOF,) [4]</font></td></tr></table>>];
S13 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S13</td></tr>13<tr><td><font color="red">modulefield : modulefield func . (ParenL,ParenR,) [2]</font></td></tr></table>>];
S14 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S14</td></tr>14<tr><td><font color="red">modulefield : modulefield type . (ParenL,ParenR,) [1]</font></td></tr></table>>];
S15 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S15</td></tr>15<tr><td>type : ParenL Type functype . ParenR (ParenL,ParenR,) [21]</td></tr></table>>];
S15 -> S24 [label="ParenR"];
S16 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S16</td></tr>16<tr><td>type : ParenL Type id . functype ParenR (ParenL,ParenR,) [21]</td></tr><tr><td>functype : . ParenL Func ParenR (ParenR,) [18]</td></tr><tr><td>functype : . ParenL Func params ParenR (ParenR,) [18]</td></tr><tr><td>functype : . ParenL Func results ParenR (ParenR,) [18]</td></tr><tr><td>functype : . ParenL Func params results ParenR (ParenR,) [18]</td></tr></table>>];
S16 -> S97 [label="ParenL"];
S16 -> S25 [label="functype"];
S17 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S17</td></tr>17<tr><td><font color="red">func : ParenL Func ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S18 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S18</td></tr>18<tr><td>exportabbr : exportabbr . ParenL Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>func : ParenL Func exportabbr . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr . ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func exportabbr . ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>typeuse : . params (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S18 -> S32 [label="ParenL"];
S18 -> S33 [label="ParenR"];
S18 -> S34 [label="instrs"];
S18 -> S35 [label="locals"];
S18 -> S184 [label="params"];
S18 -> S182 [label="results"];
S18 -> S36 [label="typeuse"];
S19 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S19</td></tr>19<tr><td>func : ParenL Func id . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . exportabbr typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id . ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id . ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id . exportabbr ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id . exportabbr ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>exportabbr : . ParenL Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>exportabbr : . exportabbr ParenL Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>typeuse : . params (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S19 -> S98 [label="ParenL"];
S19 -> S37 [label="ParenR"];
S19 -> S38 [label="exportabbr"];
S19 -> S39 [label="instrs"];
S19 -> S40 [label="locals"];
S19 -> S184 [label="params"];
S19 -> S182 [label="results"];
S19 -> S41 [label="typeuse"];
S20 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S20</td></tr>20<tr><td>func : ParenL Func instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S20 -> S42 [label="ParenR"];
S21 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S21</td></tr>21<tr><td>func : ParenL Func locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S21 -> S43 [label="ParenL"];
S21 -> S44 [label="ParenR"];
S21 -> S45 [label="instrs"];
S22 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S22</td></tr>22<tr><td>func : ParenL Func typeuse . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func typeuse . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func typeuse . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func typeuse . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S22 -> S32 [label="ParenL"];
S22 -> S48 [label="ParenR"];
S22 -> S49 [label="instrs"];
S22 -> S50 [label="locals"];
S23 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S23</td></tr>23<tr><td>functype : ParenL Func . ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL Func . params ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL Func . results ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL Func . params results ParenR (ParenR,) [18]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S23 -> S32 [label="ParenL"];
S23 -> S53 [label="ParenR"];
S23 -> S54 [label="params"];
S23 -> S55 [label="results"];
S24 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S24</td></tr>24<tr><td><font color="red">type : ParenL Type functype ParenR . (ParenL,ParenR,) [21]</font></td></tr></table>>];
S25 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S25</td></tr>25<tr><td>type : ParenL Type id functype . ParenR (ParenL,ParenR,) [21]</td></tr></table>>];
S25 -> S56 [label="ParenR"];
S26 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S26</td></tr>26<tr><td>typeuse : ParenL Type . typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type . typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type . typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type . typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr><tr><td>typeidx : . Id (ParenR,) [29]</td></tr><tr><td>typeidx : . u32 (ParenR,) [28]</td></tr><tr><td>u32 : . Integer (ParenR,) [22]</td></tr></table>>];
S26 -> S57 [label="Id"];
S26 -> S58 [label="Integer"];
S26 -> S59 [label="typeidx"];
S26 -> S60 [label="u32"];
S27 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S27</td></tr>27<tr><td>func : ParenL Func ParenL Import . String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func ParenL Import . String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S27 -> S61 [label="String"];
S28 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S28</td></tr>28<tr><td>exportabbr : ParenL Export . String ParenR (ParenL,ParenR,) [37]</td></tr></table>>];
S28 -> S62 [label="String"];
S29 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S29</td></tr>29<tr><td>params : ParenL Param . ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL Param . valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL Param . Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>valtypes : . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtypes : . valtypes valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S29 -> S63 [label="ParenR"];
S29 -> S64 [label="Id"];
S29 -> S160 [label="Funcref"];
S29 -> S161 [label="Externref"];
S29 -> S162 [label="NumType"];
S29 -> S136 [label="valtype"];
S29 -> S65 [label="valtypes"];
S30 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S30</td></tr>30<tr><td>results : ParenL Result . ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : ParenL Result . valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>valtypes : . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtypes : . valtypes valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S30 -> S66 [label="ParenR"];
S30 -> S160 [label="Funcref"];
S30 -> S161 [label="Externref"];
S30 -> S162 [label="NumType"];
S30 -> S136 [label="valtype"];
S30 -> S67 [label="valtypes"];
S31 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S31</td></tr>31<tr><td>locals : ParenL Local . ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL Local . valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL Local . Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>valtypes : . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtypes : . valtypes valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S31 -> S68 [label="ParenR"];
S31 -> S69 [label="Id"];
S31 -> S160 [label="Funcref"];
S31 -> S161 [label="Externref"];
S31 -> S162 [label="NumType"];
S31 -> S136 [label="valtype"];
S31 -> S70 [label="valtypes"];
S32 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S32</td></tr>32<tr><td>exportabbr : exportabbr ParenL . Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>func : ParenL Func exportabbr ParenL . Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func exportabbr ParenL . Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>locals : ParenL . Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>params : ParenL . Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : ParenL . Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : ParenL . Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr></table>>];
S32 -> S26 [label="Type"];
S32 -> S71 [label="Import"];
S32 -> S72 [label="Export"];
S32 -> S29 [label="Param"];
S32 -> S30 [label="Result"];
S32 -> S31 [label="Local"];
S33 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S33</td></tr>33<tr><td><font color="red">func : ParenL Func exportabbr ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S34 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S34</td></tr>34<tr><td>func : ParenL Func exportabbr instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S34 -> S73 [label="ParenR"];
S35 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S35</td></tr>35<tr><td>func : ParenL Func exportabbr locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S35 -> S43 [label="ParenL"];
S35 -> S74 [label="ParenR"];
S35 -> S75 [label="instrs"];
S36 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S36</td></tr>36<tr><td>func : ParenL Func exportabbr typeuse . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr typeuse . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr typeuse . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr typeuse . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S36 -> S32 [label="ParenL"];
S36 -> S76 [label="ParenR"];
S36 -> S77 [label="instrs"];
S36 -> S78 [label="locals"];
S37 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S37</td></tr>37<tr><td><font color="red">func : ParenL Func id ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S38 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S38</td></tr>38<tr><td>exportabbr : exportabbr . ParenL Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>func : ParenL Func id exportabbr . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . typeuse ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . typeuse instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . typeuse locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . typeuse locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr . ParenL Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id exportabbr . ParenL Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>typeuse : . params (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenL,ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S38 -> S32 [label="ParenL"];
S38 -> S80 [label="ParenR"];
S38 -> S81 [label="instrs"];
S38 -> S82 [label="locals"];
S38 -> S184 [label="params"];
S38 -> S182 [label="results"];
S38 -> S83 [label="typeuse"];
S39 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S39</td></tr>39<tr><td>func : ParenL Func id instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S39 -> S84 [label="ParenR"];
S40 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S40</td></tr>40<tr><td>func : ParenL Func id locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S40 -> S43 [label="ParenL"];
S40 -> S85 [label="ParenR"];
S40 -> S86 [label="instrs"];
S41 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S41</td></tr>41<tr><td>func : ParenL Func id typeuse . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id typeuse . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id typeuse . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id typeuse . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S41 -> S32 [label="ParenL"];
S41 -> S87 [label="ParenR"];
S41 -> S88 [label="instrs"];
S41 -> S89 [label="locals"];
S42 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S42</td></tr>42<tr><td><font color="red">func : ParenL Func instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S43 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S43</td></tr>43<tr><td>locals : locals ParenL . Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals ParenL . Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals ParenL . Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S43 -> S90 [label="Local"];
S44 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S44</td></tr>44<tr><td><font color="red">func : ParenL Func locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S45 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S45</td></tr>45<tr><td>func : ParenL Func locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S45 -> S91 [label="ParenR"];
S46 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S46</td></tr>46<tr><td>params : params ParenL . Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params ParenL . Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params ParenL . Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : ParenL . Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : ParenL . Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S46 -> S92 [label="Param"];
S46 -> S30 [label="Result"];
S47 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S47</td></tr>47<tr><td>results : results ParenL . Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results ParenL . Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S47 -> S93 [label="Result"];
S48 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S48</td></tr>48<tr><td><font color="red">func : ParenL Func typeuse ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S49 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S49</td></tr>49<tr><td>func : ParenL Func typeuse instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S49 -> S94 [label="ParenR"];
S50 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S50</td></tr>50<tr><td>func : ParenL Func typeuse locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func typeuse locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S50 -> S43 [label="ParenL"];
S50 -> S95 [label="ParenR"];
S50 -> S96 [label="instrs"];
S51 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S51</td></tr>51<tr><td>exportabbr : ParenL . Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>func : ParenL Func ParenL . Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func ParenL . Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>locals : ParenL . Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>params : ParenL . Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : ParenL . Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : ParenL . Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr></table>>];
S51 -> S26 [label="Type"];
S51 -> S27 [label="Import"];
S51 -> S28 [label="Export"];
S51 -> S29 [label="Param"];
S51 -> S30 [label="Result"];
S51 -> S31 [label="Local"];
S52 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S52</td></tr>52<tr><td><font color="red">id : Id . (ParenL,ParenR,) [19]</font></td></tr></table>>];
S53 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S53</td></tr>53<tr><td><font color="red">functype : ParenL Func ParenR . (ParenR,) [18]</font></td></tr></table>>];
S54 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S54</td></tr>54<tr><td>functype : ParenL Func params . ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL Func params . results ParenR (ParenR,) [18]</td></tr><tr><td>params : params . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S54 -> S46 [label="ParenL"];
S54 -> S99 [label="ParenR"];
S54 -> S100 [label="results"];
S55 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S55</td></tr>55<tr><td>functype : ParenL Func results . ParenR (ParenR,) [18]</td></tr><tr><td>results : results . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S55 -> S47 [label="ParenL"];
S55 -> S101 [label="ParenR"];
S56 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S56</td></tr>56<tr><td><font color="red">type : ParenL Type id functype ParenR . (ParenL,ParenR,) [21]</font></td></tr></table>>];
S57 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S57</td></tr>57<tr><td><font color="red">typeidx : Id . (ParenR,) [29]</font></td></tr></table>>];
S58 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S58</td></tr>58<tr><td><font color="red">u32 : Integer . (ParenR,) [22]</font></td></tr></table>>];
S59 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S59</td></tr>59<tr><td>typeuse : ParenL Type typeidx . ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type typeidx . ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type typeidx . ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type typeidx . ParenR params results (ParenL,ParenR,) [32]</td></tr></table>>];
S59 -> S102 [label="ParenR"];
S60 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S60</td></tr>60<tr><td><font color="red">typeidx : u32 . (ParenR,) [28]</font></td></tr></table>>];
S61 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S61</td></tr>61<tr><td>func : ParenL Func ParenL Import String . String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func ParenL Import String . String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S61 -> S103 [label="String"];
S62 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S62</td></tr>62<tr><td>exportabbr : ParenL Export String . ParenR (ParenL,ParenR,) [37]</td></tr></table>>];
S62 -> S104 [label="ParenR"];
S63 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S63</td></tr>63<tr><td><font color="red">params : ParenL Param ParenR . (ParenL,ParenR,) [14]</font></td></tr></table>>];
S64 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S64</td></tr>64<tr><td>params : ParenL Param Id . valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S64 -> S160 [label="Funcref"];
S64 -> S161 [label="Externref"];
S64 -> S162 [label="NumType"];
S64 -> S105 [label="valtype"];
S65 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S65</td></tr>65<tr><td>params : ParenL Param valtypes . ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>valtypes : valtypes . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,Funcref,Externref,NumType,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,Funcref,Externref,NumType,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,Funcref,Externref,NumType,) [6]</td></tr></table>>];
S65 -> S106 [label="ParenR"];
S65 -> S160 [label="Funcref"];
S65 -> S161 [label="Externref"];
S65 -> S162 [label="NumType"];
S65 -> S107 [label="valtype"];
S66 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S66</td></tr>66<tr><td><font color="red">results : ParenL Result ParenR . (ParenL,ParenR,) [16]</font></td></tr></table>>];
S67 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S67</td></tr>67<tr><td>results : ParenL Result valtypes . ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>valtypes : valtypes . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,Funcref,Externref,NumType,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,Funcref,Externref,NumType,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,Funcref,Externref,NumType,) [6]</td></tr></table>>];
S67 -> S108 [label="ParenR"];
S67 -> S160 [label="Funcref"];
S67 -> S161 [label="Externref"];
S67 -> S162 [label="NumType"];
S67 -> S107 [label="valtype"];
S68 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S68</td></tr>68<tr><td><font color="red">locals : ParenL Local ParenR . (ParenL,ParenR,) [40]</font></td></tr></table>>];
S69 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S69</td></tr>69<tr><td>locals : ParenL Local Id . valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S69 -> S160 [label="Funcref"];
S69 -> S161 [label="Externref"];
S69 -> S162 [label="NumType"];
S69 -> S109 [label="valtype"];
S70 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S70</td></tr>70<tr><td>locals : ParenL Local valtypes . ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>valtypes : valtypes . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,Funcref,Externref,NumType,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,Funcref,Externref,NumType,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,Funcref,Externref,NumType,) [6]</td></tr></table>>];
S70 -> S110 [label="ParenR"];
S70 -> S160 [label="Funcref"];
S70 -> S161 [label="Externref"];
S70 -> S162 [label="NumType"];
S70 -> S107 [label="valtype"];
S71 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S71</td></tr>71<tr><td>func : ParenL Func exportabbr ParenL Import . String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func exportabbr ParenL Import . String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S71 -> S111 [label="String"];
S72 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S72</td></tr>72<tr><td>exportabbr : exportabbr ParenL Export . String ParenR (ParenL,ParenR,) [37]</td></tr></table>>];
S72 -> S112 [label="String"];
S73 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S73</td></tr>73<tr><td><font color="red">func : ParenL Func exportabbr instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S74 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S74</td></tr>74<tr><td><font color="red">func : ParenL Func exportabbr locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S75 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S75</td></tr>75<tr><td>func : ParenL Func exportabbr locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S75 -> S113 [label="ParenR"];
S76 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S76</td></tr>76<tr><td><font color="red">func : ParenL Func exportabbr typeuse ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S77 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S77</td></tr>77<tr><td>func : ParenL Func exportabbr typeuse instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S77 -> S114 [label="ParenR"];
S78 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S78</td></tr>78<tr><td>func : ParenL Func exportabbr typeuse locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func exportabbr typeuse locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S78 -> S43 [label="ParenL"];
S78 -> S115 [label="ParenR"];
S78 -> S116 [label="instrs"];
S79 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S79</td></tr>79<tr><td>func : ParenL Func id ParenL Import . String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id ParenL Import . String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S79 -> S117 [label="String"];
S80 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S80</td></tr>80<tr><td><font color="red">func : ParenL Func id exportabbr ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S81 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S81</td></tr>81<tr><td>func : ParenL Func id exportabbr instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S81 -> S119 [label="ParenR"];
S82 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S82</td></tr>82<tr><td>func : ParenL Func id exportabbr locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S82 -> S43 [label="ParenL"];
S82 -> S120 [label="ParenR"];
S82 -> S121 [label="instrs"];
S83 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S83</td></tr>83<tr><td>func : ParenL Func id exportabbr typeuse . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr typeuse . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr typeuse . locals ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr typeuse . locals instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>locals : . locals ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : . locals ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S83 -> S32 [label="ParenL"];
S83 -> S122 [label="ParenR"];
S83 -> S123 [label="instrs"];
S83 -> S124 [label="locals"];
S84 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S84</td></tr>84<tr><td><font color="red">func : ParenL Func id instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S85 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S85</td></tr>85<tr><td><font color="red">func : ParenL Func id locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S86 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S86</td></tr>86<tr><td>func : ParenL Func id locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S86 -> S125 [label="ParenR"];
S87 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S87</td></tr>87<tr><td><font color="red">func : ParenL Func id typeuse ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S88 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S88</td></tr>88<tr><td>func : ParenL Func id typeuse instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S88 -> S126 [label="ParenR"];
S89 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S89</td></tr>89<tr><td>func : ParenL Func id typeuse locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id typeuse locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S89 -> S43 [label="ParenL"];
S89 -> S127 [label="ParenR"];
S89 -> S128 [label="instrs"];
S90 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S90</td></tr>90<tr><td>locals : locals ParenL Local . ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals ParenL Local . valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals ParenL Local . Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>valtypes : . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtypes : . valtypes valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S90 -> S129 [label="ParenR"];
S90 -> S130 [label="Id"];
S90 -> S160 [label="Funcref"];
S90 -> S161 [label="Externref"];
S90 -> S162 [label="NumType"];
S90 -> S136 [label="valtype"];
S90 -> S131 [label="valtypes"];
S91 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S91</td></tr>91<tr><td><font color="red">func : ParenL Func locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S92 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S92</td></tr>92<tr><td>params : params ParenL Param . ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params ParenL Param . valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params ParenL Param . Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>valtypes : . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtypes : . valtypes valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S92 -> S132 [label="ParenR"];
S92 -> S133 [label="Id"];
S92 -> S160 [label="Funcref"];
S92 -> S161 [label="Externref"];
S92 -> S162 [label="NumType"];
S92 -> S136 [label="valtype"];
S92 -> S134 [label="valtypes"];
S93 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S93</td></tr>93<tr><td>results : results ParenL Result . ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results ParenL Result . valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>valtypes : . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtypes : . valtypes valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S93 -> S135 [label="ParenR"];
S93 -> S160 [label="Funcref"];
S93 -> S161 [label="Externref"];
S93 -> S162 [label="NumType"];
S93 -> S136 [label="valtype"];
S93 -> S137 [label="valtypes"];
S94 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S94</td></tr>94<tr><td><font color="red">func : ParenL Func typeuse instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S95 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S95</td></tr>95<tr><td><font color="red">func : ParenL Func typeuse locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S96 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S96</td></tr>96<tr><td>func : ParenL Func typeuse locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S96 -> S138 [label="ParenR"];
S97 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S97</td></tr>97<tr><td>functype : ParenL . Func ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL . Func params ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL . Func results ParenR (ParenR,) [18]</td></tr><tr><td>functype : ParenL . Func params results ParenR (ParenR,) [18]</td></tr></table>>];
S97 -> S23 [label="Func"];
S98 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S98</td></tr>98<tr><td>exportabbr : ParenL . Export String ParenR (ParenL,ParenR,) [37]</td></tr><tr><td>func : ParenL Func id ParenL . Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id ParenL . Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>locals : ParenL . Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>params : ParenL . Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : ParenL . Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : ParenL . Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr></table>>];
S98 -> S26 [label="Type"];
S98 -> S79 [label="Import"];
S98 -> S28 [label="Export"];
S98 -> S29 [label="Param"];
S98 -> S30 [label="Result"];
S98 -> S31 [label="Local"];
S99 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S99</td></tr>99<tr><td><font color="red">functype : ParenL Func params ParenR . (ParenR,) [18]</font></td></tr></table>>];
S100 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S100</td></tr>100<tr><td>functype : ParenL Func params results . ParenR (ParenR,) [18]</td></tr><tr><td>results : results . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S100 -> S47 [label="ParenL"];
S100 -> S140 [label="ParenR"];
S101 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S101</td></tr>101<tr><td><font color="red">functype : ParenL Func results ParenR . (ParenR,) [18]</font></td></tr></table>>];
S102 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S102</td></tr>102<tr><td><font color="red">typeuse : ParenL Type typeidx ParenR . (ParenL,ParenR,) [32]</font></td></tr><tr><td>typeuse : ParenL Type typeidx ParenR . params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type typeidx ParenR . results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL Type typeidx ParenR . params results (ParenL,ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S102 -> S32 [label="ParenL"];
S102 -> S141 [label="params"];
S102 -> S185 [label="results"];
S103 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S103</td></tr>103<tr><td>func : ParenL Func ParenL Import String String . ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func ParenL Import String String . ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S103 -> S142 [label="ParenR"];
S104 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S104</td></tr>104<tr><td><font color="red">exportabbr : ParenL Export String ParenR . (ParenL,ParenR,) [37]</font></td></tr></table>>];
S105 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S105</td></tr>105<tr><td>params : ParenL Param Id valtype . ParenR (ParenL,ParenR,) [13]</td></tr></table>>];
S105 -> S143 [label="ParenR"];
S106 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S106</td></tr>106<tr><td><font color="red">params : ParenL Param valtypes ParenR . (ParenL,ParenR,) [14]</font></td></tr></table>>];
S107 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S107</td></tr>107<tr><td><font color="red">valtypes : valtypes valtype . (ParenR,Funcref,Externref,NumType,) [11]</font></td></tr></table>>];
S108 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S108</td></tr>108<tr><td><font color="red">results : ParenL Result valtypes ParenR . (ParenL,ParenR,) [16]</font></td></tr></table>>];
S109 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S109</td></tr>109<tr><td>locals : ParenL Local Id valtype . ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S109 -> S144 [label="ParenR"];
S110 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S110</td></tr>110<tr><td><font color="red">locals : ParenL Local valtypes ParenR . (ParenL,ParenR,) [40]</font></td></tr></table>>];
S111 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S111</td></tr>111<tr><td>func : ParenL Func exportabbr ParenL Import String . String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func exportabbr ParenL Import String . String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S111 -> S145 [label="String"];
S112 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S112</td></tr>112<tr><td>exportabbr : exportabbr ParenL Export String . ParenR (ParenL,ParenR,) [37]</td></tr></table>>];
S112 -> S146 [label="ParenR"];
S113 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S113</td></tr>113<tr><td><font color="red">func : ParenL Func exportabbr locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S114 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S114</td></tr>114<tr><td><font color="red">func : ParenL Func exportabbr typeuse instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S115 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S115</td></tr>115<tr><td><font color="red">func : ParenL Func exportabbr typeuse locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S116 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S116</td></tr>116<tr><td>func : ParenL Func exportabbr typeuse locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S116 -> S147 [label="ParenR"];
S117 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S117</td></tr>117<tr><td>func : ParenL Func id ParenL Import String . String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id ParenL Import String . String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S117 -> S148 [label="String"];
S118 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S118</td></tr>118<tr><td>func : ParenL Func id exportabbr ParenL Import . String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id exportabbr ParenL Import . String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S118 -> S149 [label="String"];
S119 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S119</td></tr>119<tr><td><font color="red">func : ParenL Func id exportabbr instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S120 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S120</td></tr>120<tr><td><font color="red">func : ParenL Func id exportabbr locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S121 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S121</td></tr>121<tr><td>func : ParenL Func id exportabbr locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S121 -> S150 [label="ParenR"];
S122 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S122</td></tr>122<tr><td><font color="red">func : ParenL Func id exportabbr typeuse ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S123 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S123</td></tr>123<tr><td>func : ParenL Func id exportabbr typeuse instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S123 -> S151 [label="ParenR"];
S124 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S124</td></tr>124<tr><td>func : ParenL Func id exportabbr typeuse locals . ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>func : ParenL Func id exportabbr typeuse locals . instrs ParenR (ParenL,ParenR,) [43]</td></tr><tr><td>locals : locals . ParenL Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : locals . ParenL Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S124 -> S43 [label="ParenL"];
S124 -> S152 [label="ParenR"];
S124 -> S153 [label="instrs"];
S125 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S125</td></tr>125<tr><td><font color="red">func : ParenL Func id locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S126 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S126</td></tr>126<tr><td><font color="red">func : ParenL Func id typeuse instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S127 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S127</td></tr>127<tr><td><font color="red">func : ParenL Func id typeuse locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S128 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S128</td></tr>128<tr><td>func : ParenL Func id typeuse locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S128 -> S154 [label="ParenR"];
S129 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S129</td></tr>129<tr><td><font color="red">locals : locals ParenL Local ParenR . (ParenL,ParenR,) [40]</font></td></tr></table>>];
S130 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S130</td></tr>130<tr><td>locals : locals ParenL Local Id . valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S130 -> S160 [label="Funcref"];
S130 -> S161 [label="Externref"];
S130 -> S162 [label="NumType"];
S130 -> S155 [label="valtype"];
S131 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S131</td></tr>131<tr><td>locals : locals ParenL Local valtypes . ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>valtypes : valtypes . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,Funcref,Externref,NumType,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,Funcref,Externref,NumType,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,Funcref,Externref,NumType,) [6]</td></tr></table>>];
S131 -> S156 [label="ParenR"];
S131 -> S160 [label="Funcref"];
S131 -> S161 [label="Externref"];
S131 -> S162 [label="NumType"];
S131 -> S107 [label="valtype"];
S132 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S132</td></tr>132<tr><td><font color="red">params : params ParenL Param ParenR . (ParenL,ParenR,) [14]</font></td></tr></table>>];
S133 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S133</td></tr>133<tr><td>params : params ParenL Param Id . valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>valtype : . Funcref (ParenR,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,) [6]</td></tr></table>>];
S133 -> S160 [label="Funcref"];
S133 -> S161 [label="Externref"];
S133 -> S162 [label="NumType"];
S133 -> S157 [label="valtype"];
S134 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S134</td></tr>134<tr><td>params : params ParenL Param valtypes . ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>valtypes : valtypes . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,Funcref,Externref,NumType,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,Funcref,Externref,NumType,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,Funcref,Externref,NumType,) [6]</td></tr></table>>];
S134 -> S158 [label="ParenR"];
S134 -> S160 [label="Funcref"];
S134 -> S161 [label="Externref"];
S134 -> S162 [label="NumType"];
S134 -> S107 [label="valtype"];
S135 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S135</td></tr>135<tr><td><font color="red">results : results ParenL Result ParenR . (ParenL,ParenR,) [16]</font></td></tr></table>>];
S136 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S136</td></tr>136<tr><td><font color="red">valtypes : valtype . (ParenR,Funcref,Externref,NumType,) [11]</font></td></tr></table>>];
S137 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S137</td></tr>137<tr><td>results : results ParenL Result valtypes . ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>valtypes : valtypes . valtype (ParenR,Funcref,Externref,NumType,) [11]</td></tr><tr><td>valtype : . Funcref (ParenR,Funcref,Externref,NumType,) [7]</td></tr><tr><td>valtype : . Externref (ParenR,Funcref,Externref,NumType,) [8]</td></tr><tr><td>valtype : . NumType (ParenR,Funcref,Externref,NumType,) [6]</td></tr></table>>];
S137 -> S159 [label="ParenR"];
S137 -> S160 [label="Funcref"];
S137 -> S161 [label="Externref"];
S137 -> S162 [label="NumType"];
S137 -> S107 [label="valtype"];
S138 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S138</td></tr>138<tr><td><font color="red">func : ParenL Func typeuse locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S139 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S139</td></tr>139<tr><td>func : ParenL Func id exportabbr ParenL . Import String String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id exportabbr ParenL . Import String String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>locals : ParenL . Local ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local valtypes ParenR (ParenL,ParenR,) [40]</td></tr><tr><td>locals : ParenL . Local Id valtype ParenR (ParenL,ParenR,) [39]</td></tr><tr><td>params : ParenL . Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : ParenL . Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : ParenL . Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : ParenL . Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR results (ParenL,ParenR,) [32]</td></tr><tr><td>typeuse : ParenL . Type typeidx ParenR params results (ParenL,ParenR,) [32]</td></tr></table>>];
S139 -> S26 [label="Type"];
S139 -> S118 [label="Import"];
S139 -> S29 [label="Param"];
S139 -> S30 [label="Result"];
S139 -> S31 [label="Local"];
S140 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S140</td></tr>140<tr><td><font color="red">functype : ParenL Func params results ParenR . (ParenR,) [18]</font></td></tr></table>>];
S141 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S141</td></tr>141<tr><td>params : params . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td><font color="red">typeuse : ParenL Type typeidx ParenR params . (ParenL,ParenR,) [32]</font></td></tr><tr><td>typeuse : ParenL Type typeidx ParenR params . results (ParenL,ParenR,) [32]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S141 -> S46 [label="ParenL"];
S141 -> S186 [label="results"];
S142 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S142</td></tr>142<tr><td>func : ParenL Func ParenL Import String String ParenR . ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func ParenL Import String String ParenR . typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>typeuse : . params (ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S142 -> S32 [label="ParenL"];
S142 -> S163 [label="ParenR"];
S142 -> S184 [label="params"];
S142 -> S182 [label="results"];
S142 -> S164 [label="typeuse"];
S143 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S143</td></tr>143<tr><td><font color="red">params : ParenL Param Id valtype ParenR . (ParenL,ParenR,) [13]</font></td></tr></table>>];
S144 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S144</td></tr>144<tr><td><font color="red">locals : ParenL Local Id valtype ParenR . (ParenL,ParenR,) [39]</font></td></tr></table>>];
S145 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S145</td></tr>145<tr><td>func : ParenL Func exportabbr ParenL Import String String . ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func exportabbr ParenL Import String String . ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S145 -> S165 [label="ParenR"];
S146 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S146</td></tr>146<tr><td><font color="red">exportabbr : exportabbr ParenL Export String ParenR . (ParenL,ParenR,) [37]</font></td></tr></table>>];
S147 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S147</td></tr>147<tr><td><font color="red">func : ParenL Func exportabbr typeuse locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S148 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S148</td></tr>148<tr><td>func : ParenL Func id ParenL Import String String . ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id ParenL Import String String . ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S148 -> S166 [label="ParenR"];
S149 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S149</td></tr>149<tr><td>func : ParenL Func id exportabbr ParenL Import String . String ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id exportabbr ParenL Import String . String ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S149 -> S167 [label="String"];
S150 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S150</td></tr>150<tr><td><font color="red">func : ParenL Func id exportabbr locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S151 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S151</td></tr>151<tr><td><font color="red">func : ParenL Func id exportabbr typeuse instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S152 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S152</td></tr>152<tr><td><font color="red">func : ParenL Func id exportabbr typeuse locals ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S153 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S153</td></tr>153<tr><td>func : ParenL Func id exportabbr typeuse locals instrs . ParenR (ParenL,ParenR,) [43]</td></tr></table>>];
S153 -> S168 [label="ParenR"];
S154 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S154</td></tr>154<tr><td><font color="red">func : ParenL Func id typeuse locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S155 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S155</td></tr>155<tr><td>locals : locals ParenL Local Id valtype . ParenR (ParenL,ParenR,) [39]</td></tr></table>>];
S155 -> S169 [label="ParenR"];
S156 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S156</td></tr>156<tr><td><font color="red">locals : locals ParenL Local valtypes ParenR . (ParenL,ParenR,) [40]</font></td></tr></table>>];
S157 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S157</td></tr>157<tr><td>params : params ParenL Param Id valtype . ParenR (ParenL,ParenR,) [13]</td></tr></table>>];
S157 -> S170 [label="ParenR"];
S158 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S158</td></tr>158<tr><td><font color="red">params : params ParenL Param valtypes ParenR . (ParenL,ParenR,) [14]</font></td></tr></table>>];
S159 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S159</td></tr>159<tr><td><font color="red">results : results ParenL Result valtypes ParenR . (ParenL,ParenR,) [16]</font></td></tr></table>>];
S160 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S160</td></tr>160<tr><td><font color="red">valtype : Funcref . (ParenR,Funcref,Externref,NumType,) [7]</font></td></tr></table>>];
S161 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S161</td></tr>161<tr><td><font color="red">valtype : Externref . (ParenR,Funcref,Externref,NumType,) [8]</font></td></tr></table>>];
S162 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S162</td></tr>162<tr><td><font color="red">valtype : NumType . (ParenR,Funcref,Externref,NumType,) [6]</font></td></tr></table>>];
S163 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S163</td></tr>163<tr><td><font color="red">func : ParenL Func ParenL Import String String ParenR ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S164 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S164</td></tr>164<tr><td>func : ParenL Func ParenL Import String String ParenR typeuse . ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S164 -> S172 [label="ParenR"];
S165 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S165</td></tr>165<tr><td>func : ParenL Func exportabbr ParenL Import String String ParenR . ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func exportabbr ParenL Import String String ParenR . typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>typeuse : . params (ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S165 -> S32 [label="ParenL"];
S165 -> S173 [label="ParenR"];
S165 -> S184 [label="params"];
S165 -> S182 [label="results"];
S165 -> S174 [label="typeuse"];
S166 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S166</td></tr>166<tr><td>func : ParenL Func id ParenL Import String String ParenR . ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id ParenL Import String String ParenR . typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>typeuse : . params (ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S166 -> S32 [label="ParenL"];
S166 -> S175 [label="ParenR"];
S166 -> S184 [label="params"];
S166 -> S182 [label="results"];
S166 -> S176 [label="typeuse"];
S167 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S167</td></tr>167<tr><td>func : ParenL Func id exportabbr ParenL Import String String . ParenR ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id exportabbr ParenL Import String String . ParenR typeuse ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S167 -> S177 [label="ParenR"];
S168 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S168</td></tr>168<tr><td><font color="red">func : ParenL Func id exportabbr typeuse locals instrs ParenR . (ParenL,ParenR,) [43]</font></td></tr></table>>];
S169 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S169</td></tr>169<tr><td><font color="red">locals : locals ParenL Local Id valtype ParenR . (ParenL,ParenR,) [39]</font></td></tr></table>>];
S170 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S170</td></tr>170<tr><td><font color="red">params : params ParenL Param Id valtype ParenR . (ParenL,ParenR,) [13]</font></td></tr></table>>];
S171 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S171</td></tr>171<tr><td>results : results . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td><font color="red">typeuse : params results . (ParenL,ParenR,) [33]</font></td></tr></table>>];
S171 -> S47 [label="ParenL"];
S172 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S172</td></tr>172<tr><td><font color="red">func : ParenL Func ParenL Import String String ParenR typeuse ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S173 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S173</td></tr>173<tr><td><font color="red">func : ParenL Func exportabbr ParenL Import String String ParenR ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S174 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S174</td></tr>174<tr><td>func : ParenL Func exportabbr ParenL Import String String ParenR typeuse . ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S174 -> S178 [label="ParenR"];
S175 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S175</td></tr>175<tr><td><font color="red">func : ParenL Func id ParenL Import String String ParenR ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S176 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S176</td></tr>176<tr><td>func : ParenL Func id ParenL Import String String ParenR typeuse . ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S176 -> S179 [label="ParenR"];
S177 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S177</td></tr>177<tr><td>func : ParenL Func id exportabbr ParenL Import String String ParenR . ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>func : ParenL Func id exportabbr ParenL Import String String ParenR . typeuse ParenR (ParenL,ParenR,) [44]</td></tr><tr><td>typeuse : . params (ParenR,) [33]</td></tr><tr><td>typeuse : . results (ParenR,) [33]</td></tr><tr><td>typeuse : . params results (ParenR,) [33]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR results (ParenR,) [32]</td></tr><tr><td>typeuse : . ParenL Type typeidx ParenR params results (ParenR,) [32]</td></tr><tr><td>params : . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>params : . params ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : . params ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S177 -> S32 [label="ParenL"];
S177 -> S180 [label="ParenR"];
S177 -> S184 [label="params"];
S177 -> S182 [label="results"];
S177 -> S181 [label="typeuse"];
S178 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S178</td></tr>178<tr><td><font color="red">func : ParenL Func exportabbr ParenL Import String String ParenR typeuse ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S179 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S179</td></tr>179<tr><td><font color="red">func : ParenL Func id ParenL Import String String ParenR typeuse ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S180 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S180</td></tr>180<tr><td><font color="red">func : ParenL Func id exportabbr ParenL Import String String ParenR ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S181 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S181</td></tr>181<tr><td>func : ParenL Func id exportabbr ParenL Import String String ParenR typeuse . ParenR (ParenL,ParenR,) [44]</td></tr></table>>];
S181 -> S183 [label="ParenR"];
S182 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S182</td></tr>182<tr><td>results : results . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td><font color="red">typeuse : results . (ParenL,ParenR,) [33]</font></td></tr></table>>];
S182 -> S47 [label="ParenL"];
S183 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S183</td></tr>183<tr><td><font color="red">func : ParenL Func id exportabbr ParenL Import String String ParenR typeuse ParenR . (ParenL,ParenR,) [44]</font></td></tr></table>>];
S184 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S184</td></tr>184<tr><td>params : params . ParenL Param ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params . ParenL Param valtypes ParenR (ParenL,ParenR,) [14]</td></tr><tr><td>params : params . ParenL Param Id valtype ParenR (ParenL,ParenR,) [13]</td></tr><tr><td><font color="red">typeuse : params . (ParenL,ParenR,) [33]</font></td></tr><tr><td>typeuse : params . results (ParenL,ParenR,) [33]</td></tr><tr><td>results : . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : . results ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr></table>>];
S184 -> S46 [label="ParenL"];
S184 -> S171 [label="results"];
S185 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S185</td></tr>185<tr><td>results : results . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td><font color="red">typeuse : ParenL Type typeidx ParenR results . (ParenL,ParenR,) [32]</font></td></tr></table>>];
S185 -> S47 [label="ParenL"];
S186 [label=<<table border="0" cellborder="0" cellspacing="0"><tr><td>S186</td></tr>186<tr><td>results : results . ParenL Result ParenR (ParenL,ParenR,) [16]</td></tr><tr><td>results : results . ParenL Result valtypes ParenR (ParenL,ParenR,) [16]</td></tr><tr><td><font color="red">typeuse : ParenL Type typeidx ParenR params results . (ParenL,ParenR,) [32]</font></td></tr></table>>];
S186 -> S47 [label="ParenL"];
}
